/* MARK: Development */


/* Represents a Settings Section for settings that are not fully ready */
"experimental" = "Experimental";

/* Represents media types that are not currently implemented */
"notImplementedYetWithType" = "Type: %@ not implemented yet :(";


/* MARK: Error Handling */


/* Label indicating no overview is available */
"noOverviewAvailable" = "No overview available";


/* MARK: General */


/* Label for buttons section */
"buttons" = "Buttons";

/* Stop the current operation or reset the screen/form */
"cancel" = "Cancel";

/* Proceed or continue to the next screen as a proceed opposed to an agreement */
"continue" = "Continue";

/* Label for current item */
"current" = "Current";

/* Dismiss a message or popup */
"dismiss" = "Dismiss";

/* Feature/Setting is inactive */
"disabled" = "Disabled";

/* Feature/Setting is active */
"enabled" = "Enabled";

/* Generic error for handling uncaught & unexpected interactions */
"error" = "Error";

/* Go back to the Home screen/form */
"home" = "Home";

/* Generic term for Movies/Episodes/Shows... etc */
"items" = "Items";

/* Label indicating missing items */
"missing" = "Missing";

/* Label indicating something's name */
"name" = "Name";

/* Button label for the next item */
"next" = "Next";

/* Label indicating none */
"none" = "None";

/* Reset the form/screen back to the default/previous values */
"reset" = "Reset";

/* Retry an action typical after it failed the first time */
"retry" = "Retry";

/* Expand a section to see all items */
"seeAll" = "See All";

/* Button label to see more content */
"seeMore" = "See More";

/* Generic term for the Active Jellyfin Server */
"server" = "Server";

/* Generic label for unknown objects */
"unknown" = "Unknown";


/* MARK: Home */


/* Represents the Home View section for All media items that are new for each Media Type */
"latestWithString" = "Latest %@";

/* Represents the Home View section for Show items are in-progress Seasons */
"nextUp" = "Next Up";

/* Label for recently added items */
"recentlyAdded" = "Recently Added";


/* MARK: Item - Generic */


/* Label for chapter slider */
"chapterSlider" = "Chapter Slider";

/* Label for chapters section */
"chapters" = "Chapters";

/* Label for missing items section */
"missingItems" = "Missing Items";

/* Label indicating no title is available */
"noTitle" = "No title";

/* Message indicating media information is being retrieved */
"retrievingMediaInformation" = "Retrieving media information";

/* Label for subtitles settings/selection */
"subtitles" = "Subtitles";


/* MARK: Item - Shows */


/* Label indicating a show airs on s specific day of the week */
"airWithDate" = "Airs %s";

/* Label used to designate an Episode contained within a Show Library */
"episodes" = "Episodes";

/* Label for episode landscape poster */
"episodeLandscapePoster" = "Episode Landscape Poster";

/* Label for episode number */
"episodeNumber" = "Episode %1$@";

/* Represents the label that will exist in place of an episode view if there are no episodes */
"noEpisodesAvailable" = "No episodes available";

/* Represents the Media Item label to denote a Show's Season & Episode */
"seasonAndEpisode" = "S%1$@:E%2$@";

/* Label for series backdrop */
"seriesBackdrop" = "Series Backdrop";

/* Label indicating a show that has not aired */
"unaired" = "Unaired";


/* MARK: Item - View */


/* Label to denote the section about a media item */
"about" = "About";

/* Label for cast and crew information */
"castAndCrew" = "Cast & Crew";

/* Label for cinematic view */
"cinematic" = "Cinematic";

/* Option for compact logo view */
"compactLogo" = "Compact Logo";

/* Option for compact poster view */
"compactPoster" = "Compact Poster";

/* Represents the Media Item button label to start a Media Item playback */
"play" = "Play";

/* Label for Media Items posters */
"posters" = "Posters";

/* Label for recommended items */
"recommended" = "Recommended";

/* Label for ratings section */
"ratings" = "Ratings";

/* Label for special features section */
"specialFeatures" = "Special Features";


/* MARK: Libraries - Generic */


/* Label used to designate a Library */
"library" = "Library";

/* Library Item has been watch by this user */
"played" = "Played";

/* Media Items will use a Random Image opposed to their Cover Image */
"randomImage" = "Random Image";

/* Library Item has not been watch by this user */
"unplayed" = "Unplayed";


/* MARK: Libraries - Filtering/Sorting */


/* Represents the the Favorited Labels for Library/Search Filters */
"favorited" = "Favorited";

/* Represents the the Filter Labels for Library/Search Filters */
"filters" = "Filters";

/* Represents the the Filter Labels for Library/Search Filtering based on Item Genre(s) */
"genres" = "Genres";

/* Used as a catch when the Library and/or Filtering results in no value content */
"noResults" = "No results.";

/* Button Label to indicate that this Filter Object sets the Library Order Ascending/Descending by the Sort Types */
"order" = "Order";

/* Button Label to indicate that this Filter Object sets the Library Order by an Item/Filter */
"sort" = "Sort";

/* Represents the the Filter Labels for Library/Search Filtering based on Item Studio */
"studios" = "Studios";

/* Represents the the Filter Labels for Library/Search Filtering based on Item Tag(s) */
"tags" = "Tags";

/* Represents the the Filter Labels for Library/Search Filtering based on Item Years */
"years" = "Years";


/* MARK: Libraries - Types */


/* Represents the the Library Labels for Live TV Channels */
"channels" = "Channels";

/* Represents the the Library Labels for Collections/Boxsets */
"collections" = "Collections";

/* Label Header to set the Library Layout to a Grid*/
"grid" = "Grid";

/* Label Header to set the Library Layout Section */
"layout" = "Layout";

/* Label Header to set the Library Layout to a List*/
"list" = "List";

/* Represents the the Library Labels for Movie Media Types */
"movies" = "Movies";

/* Represents the the Library Labels for Live TV Programs */
"programs" = "Programs";

/* Label for the Random Feature that sends the users to a Random Library Item */
"random" = "Random";

/* Represents the the Library Labels for Series / Shows Media Type */
"series" = "Series";

/* Represents the the Library Labels for Show Media Types */
"tvShows" = "TV Shows";


/* MARK: Live TV */


/* Represents the the Library Labels for Live TV Programs/Shows that are Kids Content */
"kids" = "Kids";

/* Represents the the Library Labels for Live TV Programs/Shows that are News/Current Events Content */
"news" = "News";

/* Represents the the Library Labels for Live TV Programs/Shows that are on Now */
"onNow" = "On Now";

/* Represents the the Library Labels for Live TV Programs/Shows that are Sports Content */
"sports" = "Sports";

/* MARK: Valid Above This Line */

/* MARK: Media */


/* Section Label for the Media View */
"allMedia" = "All Media";

/* Section Label for the Media's Downloaded Media Section */
"downloads" = "Downloads";

/* Section Label for the Media's Favorite Section */
"favorites" = "Favorites";

/* Section Label for the Media's Live TV Section */
"liveTV" = "Live TV";

/* Section Label for all Media Library Sections */
"media" = "Media";


/* MARK: Media Casting */


/* Represents the Media Casting Device selection when no Media Casting Devices were found */
"noCastdevicesfound" = "No Cast devices found..";

/* Represents the Media Casting Device selection label */
"selectCastDestination" = "Select Cast Destination";


/* MARK: Player Overlay */


/* Overlay Label for Selecting Audio Information/Settings */
"audio" = "Audio";

/* Overlay Label for jumping backwards in the media based on the Jump configuration in Playback Settings */
"jumpBackward" = "Jump Backward";

/* Overlay Label for jumping forward in the media based on the Jump configuration in Playback Settings */
"jumpForward" = "Jump Forward";

/* Overlay Label for going to the next episode in a show */
"nextItem" = "Next Item";

/* Overlay Label for Playing/Pausing currently watched content*/
"playAndPause" = "Play / Pause";

/* Overlay Label for going back to previous episode in a show */
"previousItem" = "Previous Item";

/* Overlay Label for Selecting Subtitle/Caption Information/Settings */
"subtitle" = "Subtitle";

/* Overlay Label for Selecting Video Information/Settings */
"video" = "Video";


/* MARK: Search */


/* Label for people section of the Search View */
"people" = "People";

/* Represents the Section Label for the Search View */
"search" = "Search";

/* Represents the Search action designated as in-progress or an option on the view. Also used during Server Discovery */
"searchDots" = "Searchâ€¦";


/* MARK: Settings */


/* Section Label for the Settings Screen */
"settings" = "Settings";


/* MARK: Settings - Accessibility */


/* Represents the Accessibility section label */
"accessibility" = "Accessibility";

/* Represents the Appearance setting label */
"appearance" = "Appearance";

/* Setting for Compact Text spacing as opposed to Normal Spacing */
"compact" = "Compact";

/* Represents the dark theme setting */
"dark" = "Dark";

/* Represents the light theme setting */
"light" = "Light";

/* Setting for Normal Text spacing as opposed to Compact Spacing */
"normal" = "Normal";

/* Represents the system theme setting */
"system" = "System";


/* MARK: Settings - App Icon */


/* Section Header Label for changing the Swiftfin App Icon */
"appIcon" = "App Icon";

/* Represents the label for all Jellyfin Icons that are Blue regardless of Backgound/Color Invert */
"blue" = "Blue";

/* Represents the label for all Jellyfin Icons that are Green regardless of Backgound/Color Invert */
"green" = "Green";

/* App Icons that are Colored with the Selected Color but have a Black Background */
"invertedDark" = "Inverted Dark";

/* App Icons that are Colored with the Selected Color but have a White Background */
"invertedLight" = "Inverted Light";

/* Represents the label for all Jellyfin Icons that are Orange regardless of Backgound/Color Invert */
"orange" = "Orange";

/* Represents the label for the default Jellyfin Icon for Swiftfin */
"primary" = "Primary";

/* Represents the label for all Jellyfin Icons that are Red regardless of Backgound/Color Invert */
"red" = "Red";

/* Represents the label for all Jellyfin Icons that are Yellow regardless of Backgound/Color Invert */
"yellow" = "Yellow";


/* MARK: Settings - App Settings */


/* Represents the Advanced section label */
"advanced" = "Advanced";


/* MARK: Settings - Bitrate Options */


/* Option for automatic bitrate selection */
"bitrateAuto" = "Auto";

/* Option to set the bitrate to 480p quality at 1.5 Mbps */
"bitrateKbps1500" = "480p - 1.5 Mbps";

/* Option to set the bitrate to 360p quality at 420 Kbps */
"bitrateKbps420" = "360p - 420 Kbps";

/* Option to set the bitrate to 480p quality at 720 Kbps */
"bitrateKbps720" = "480p - 720 Kbps";

/* Option for the maximum bitrate */
"bitrateMax" = "Maximum";

/* Option to set the bitrate to 1080p quality at 10 Mbps */
"bitrateMbps10" = "1080p - 10 Mbps";

/* Option to set the bitrate to 1080p quality at 15 Mbps */
"bitrateMbps15" = "1080p - 15 Mbps";

/* Option to set the bitrate to 1080p quality at 20 Mbps */
"bitrateMbps20" = "1080p - 20 Mbps";

/* Option to set the bitrate to 1080p quality at 40 Mbps */
"bitrateMbps40" = "1080p - 40 Mbps";

/* Option to set the bitrate to 1080p quality at 60 Mbps */
"bitrateMbps60" = "1080p - 60 Mbps";

/* Option to set the bitrate to 4K quality at 80 Mbps */
"bitrateMbps80" = "4K - 80 Mbps";

/* Option to set the bitrate to 4K quality at 120 Mbps */
"bitrateMbps120" = "4K - 120 Mbps";

/* Option to set the bitrate to 480p quality at 3 Mbps */
"bitrateMbps3" = "480p - 3 Mbps";

/* Option to set the bitrate to 720p quality at 4 Mbps */
"bitrateMbps4" = "720p - 4 Mbps";

/* Option to set the bitrate to 720p quality at 6 Mbps */
"bitrateMbps6" = "720p - 6 Mbps";

/* Option to set the bitrate to 720p quality at 8 Mbps */
"bitrateMbps8" = "720p - 8 Mbps";

/* Description for bitrate test duration indicating larger tests provide more accurate bitrates but may delay playback */
"bitrateTestDescription" = "Larger tests result in a more accurate bitrate but may delay playback";

/* Option to set the maximum bitrate for playback */
"maximumBitrate" = "Maximum Bitrate";

/* Option to set the test sizes for bitrate testing */
"testSize" = "Test Size";


/* MARK: Settings - Customization */


/* Label for accent color selection */
"accentColor" = "Accent Color";

/* Label explaining a restart may be required */
"accentColorDescription" = "Some views may need an app restart to update.";

/* Label for color selection */
"color" = "Color";

/* Button label to customize settings */
"customize" = "Customize";

/* Button label to edit jump lengths */
"editJumpLengths" = "Edit Jump Lengths";

/* Label for indicators settings */
"indicators" = "Indicators";

/* Option to show cast and crew information */
"showCastAndCrew" = "Show Cast & Crew";

/* Option to enable chapters info in the bottom overlay */
"showChaptersInfoInBottomOverlay" = "Show Chapters Info In Bottom Overlay";

/* Option to flatten library items */
"showFlattenView" = "Flatten Library Items";

/* Option to show missing episodes */
"showMissingEpisodes" = "Show Missing Episodes";

/* Option to show missing seasons */
"showMissingSeasons" = "Show Missing Seasons";

/* Option to show poster labels */
"showPosterLabels" = "Show Poster Labels";

/* Label for the setting to use the Primary Image for Media Items */
"usePrimaryImage" = "Use Primary Image";

/* Label the message explainging the 'User Primary Image' setting */
"usePrimaryImageDescription" = "Uses the primary image and hides the logo.";


/* MARK: Settings - Letter Picker */


/* The Letter Picker Bar will be on the Left/Leading side of the Library */
"left" = "Left";

/* Represents the Letter Picker Filter label */
"letter" = "Letter";

/* Represents the Letter Picker Enabled section label */
"letterPicker" = "Letter Picker";

/* The Letter Picker Bar will be on the Right/Trailing side of the Library */
"right" = "Right";

/* Represents the Letter Picker Orientation section label */
"orientation" = "Orientation";


/* MARK: Settings - Playback */

/* Option to enable auto play */
"autoPlay" = "Auto Play";

/* Section header for all Playback Gestures settings */
"gestures" = "Gestures";

/* Label for jump button */
"jump" = "Jump";

/* Section Title for setting how far backwards the jump backwards button goes */
"jumpBackwardLength" = "Jump Backward Length";

/* Section Title for setting how far forward the jump forward button goes */
"jumpForwardLength" = "Jump Forward Length";

/* Message Describing if gesture for jumping forward/backward is enabled */
"jumpGesturesEnabled" = "Jump Gestures Enabled";

/* Label for jump length in seconds */
"jumpLengthSeconds" = "%s seconds";

/* Label for video player menu buttons */
"menuButtons" = "Menu Buttons";

/* Indicates that Swiftfin playback is using AVKit */
"nativePlayer" = "Native Player";

/* Represents the Playback section label */
"playback" = "Playback";

/* Message Describing the current enabled status of the Player's Gesture Lock */
"playerGesturesLockGestureEnabled" = "Player Gestures Lock Gesture Enabled";

/* Label for playback buttons */
"playbackButtons" = "Playback Buttons";

/* Label for playback speed settings */
"playbackSpeed" = "Playback Speed";

/* Represents the Playback Settings section label */
"playbackSettings" = "Playback settings";

/* Label for resume offset settings */
"resumeOffset" = "Resume Offset";

/* Description for resume offset settings */
"resumeOffsetDescription" = "Resume content seconds before the recorded resume time";

/* Option for a 5-second resume offset */
"resume5SecondOffset" = "Resume 5 Second Offset";

/* Message Describing the current enabled status of the Player's Gesture to Seek on the Timeline for currently playing content */
"seekSlideGestureEnabled" = "Seek Slide Gesture Enabled";

/* Label for slider settings */
"slider" = "Slider";

/* Label for slider color */
"sliderColor" = "Slider Color";

/* Label for slider type */
"sliderType" = "Slider Type";


/* Message Describing the current enabled status of the Player's Gestures for System Contols like Volume/Brightness */
"systemControlGesturesEnabled" = "System Control Gestures Enabled";

/* Section Title for the Video Player Settings Section */
"videoPlayer" = "Video Player";

/* Section Title for the Video Player Type Setting between VLC, and AVKit */
"videoPlayerType" = "Video Player Type";


/* MARK: Settings - Reset */


/* Section Label for User Settings Reset */
"resetUserSettings" = "Reset User Settings";

/* Message explaining */
"resetAllSettings" = "Reset all settings back to defaults.";

/* Section Label for Full App Settings Reset */
"resetAppSettings" = "Reset App Settings";


/* MARK: Settings - Sizes */


/* Option for a larger than regular item type */
"larger" = "Larger";

/* Option for the largest item type */
"largest" = "Largest";

/* Option for a smaller than regular item type */
"smaller" = "Smaller";

/* Option for the smallest item type */
"smallest" = "Smallest";

/* Option for the a standard/regular item type */
"regular" = "Regular";


/* MARK: Settings - Subtitles */


/* Section Label to for a configuration to offset subtitles at playback */
"subtitleOffset" = "Subtitle Offset";

/* Section Label to for a configuration to customize subtitle color */
"subtitleColor" = "Subtitle Color";

/* Section Label to for a configuration to customize subtitle size */
"subtitleSize" = "Subtitle Size";

/* Section Label to for a configuration to customize subtitle font */
"subtitleFont" = "Subtitle Font";


/* MARK: Settings - System */


/* Section of the Jellyfin/System screen directing users to the Swiftfin GitHub for Issue Tracking */
"bugsAndFeatures" = "Bugs and Features";

/* tvOS Setting whether going back on the remote should close Swiftfin or if it should provide a confirmation first */
"confirmClose" = "Confirm Close";

/* Section Label for the logs generated by Swiftfin */
"logs" = "Logs";

/* Section of the Jellyfin/System screen directing users to the Swiftfin GitHub to see the source code */
"sourceCode" = "Source Code";

/* Section of the Jellyfin/System screen directing users to the Swiftfin GitHub for Feature Requesting */
"requestFeature" = "Request a Feature";

/* Section of the Jellyfin/System screen directing users to the Swiftfin GitHub for Issue Reporting */
"reportIssue" = "Report an Issue";

/* Section Label for details about the current connected Jellyfin Server */
"serverDetails" = "Server Details";

/* Label for source code */
"sourceCode" = "Source Code";

/* Section Label for OS running the current connected Jellyfin Server */
"operatingSystem" = "Operating System";

/* Label for the server version field */
"version" = "Version";


/* MARK: Server Selection & Login */


/* Represents the label used to offer the user the ability to designate an additional URL for an existing Jellyfin Server */
"addURL" = "Add URL";

/* Represents the label for the button that takes the user to the Server selection screen */
"changeServer" = "Change Server";

/* Represents the Connect Button label for the Server Details provided */
"connect" = "Connect";

/* Represents the first Connect to Server label on a new installation */
"connectToJellyfinServer" = "Connect to a Jellyfin server";

/* Represents the first Connect to Server label on a new installation */
"connectToJellyfinServerStart" = "Connect to a Jellyfin server to get started";

/* Represents the Connect Button label for the Server Details provided */
"connectToServer" = "Connect to Server";

/* Represents the section label for Jellyfin Server(s) that were found during Jellyfin Server Discovery */
"discoveredServers" = "Discovered Servers";

/* Represents the section label for local/LAN Jellyfin Server(s) that were found during Jellyfin Server Discovery */
"localServers" = "Local Servers";

/* Message Label to designate that the Server Discovery process did not find any local/LAN Server(s) */
"noLocalServersFound" = "No local servers found";

/* Message indicating there are no public users */
"noPublicUsers" = "No public Users";

/* Represents the section label for where a User Password needs to go. Also found in the User Settings to change/reset password */
"password" = "Password";

/* Represents the section label for public users */
"publicUsers" = "Public Users";

/* Represents a label for a button to remove all Users & Servers in Swiftfin */
"removeAllServers" = "Remove All Servers";

/* Represents a label for a button to remove all Users from a Jellyfin Server in Swiftfin */
"removeAllUsers" = "Remove All Users";

/* Represents the section label for where a User Password needs to go. Also found in the User Settings to change/reset password */
"serverAlreadyConnected" = "Server %s is already connected";

/* Represents the label used to offer the user the ability to designate an additional URL for an existing Jellyfin Server */
"serverAlreadyExistsPrompt" = "Server %s already exists. Add new URL?";

/* Represents the label used to head the section where Server Information is configured for new devices or on tvOS to designate the Server information */
"serverInformation" = "Server Information";

/* Represents the label used to head the section where Server Information is configured for new devices or on tvOS to designate the Server information */
"serverURL" = "Server URL";

/* Button label that confirms the user information and attempts to sign them in */
"signIn" = "Sign In";

/* Message on first setup pointing the user to sign in */
"signInGetStarted" = "Sign in to get started";

/* Message indicating the server that the user is signing in to */
"signInToServer" = "Sign In to %s";

/* Represents the label used in the User Settings to change users and go to the Server Selection/Login page */
"switchUser" = "Switch User";

/* The Server Add/Sign in process has failed and this message is displayed */
"unableToConnectServer" = "Unable to connect to server";

/* Message indicating the host could not be found */
"unableToFindHost" = "Unable to find host";

/* Message indicating unauthorized access */
"unauthorized" = "Unauthorized";

/* Message indicating an unauthorized user */
"unauthorizedUser" = "Unauthorized user";

/* Label indicating the Jellyfin Server URL */
"url" = "URL";

/* Label for user settings */
"user" = "User";

/* Represents the label used to head the section where a username needs to be provided to connect to a server */
"username" = "Username";


/* MARK: Stream Information */


/* Section Title for Media Stream Info Views for Stream Delivery Properties */
"delivery" = "Delivery";


/* MARK: TVOS Specific */


/* Label for press down for menu */
"pressDownForMenu" = "Press Down for Menu";


/* MARK: Video Player */


/* Option for aspect fill display mode */
"aspectFill" = "Aspect Fill";

/* Section Label for Audio, Captions/Subtitles configuration on the Video Playback Overlay */
"audioAndCaptions" = "Audio & Captions";

/* Label for audio offset settings */
"audioOffset" = "Audio Offset";

/* Section label on the video player overlay to select the audio track for playback */
"audioTrack" = "Audio Track";

/* Label for bar buttons settings */
"barButtons" = "Bar Buttons";

/* Label for indicating Closed Captions or Subtitles for a media item */
"closedCaptions" = "Closed Captions";

/* Label in the overlay to indicate the current time for the watched content */
"currentPosition" = "Current Position";

/* Label in the overlay to indicate time remaining in the watched content */
"remainingTime" = "Remaining Time";

/* Option for pausing the Player when it's sent to the background */
"pauseOnBackground" = "Pause on background";

/* Option for resuming the Player when it's sent back to the foreground */
"playOnActive" = "Play on active";

/* Option to play from the beginning */
"playFromBeginning" = "Play From Beginning";

/* Button label to play the next item */
"playNextItem" = "Play Next Item";

/* Button label to play the previous item */
"playPreviousItem" = "Play Previous Item";

/* Label for playback progress */
"progress" = "Progress";

/* Label for scrub current time */
"scrubCurrentTime" = "Scrub Current Time";

/* Label for trailing value */
"trailingValue" = "Trailing Value";

/* Label to denote the Transition Section */
"transition" = "Transition";

/* Label for timestamp settings */
"timestamp" = "Timestamp";

/* Label for timestamp type */
"timestampType" = "Timestamp Type";


/* MARK: Quick Connect */


/* Represents the final step in the Quick Connect Authentication process using Swiftifn to Authorize another device */
"authorize" = "Authorize";

/* Represents the Quick Connect Section title Label */
"quickConnect" = "Quick Connect";

/* Represents the Quick Connect Section title Label for where the Code is input */
"quickConnectCode" = "Quick Connect code";

/* Represents the Quick Connect message label when Quick Connect authorization for another device fails due to incorrect code */
"quickConnectInvalidError" = "Invalid Quick Connect code";

/* Represents the Quick Connect message label when Quick Connect authorization for another device fails due to being disabled on Server */
"quickConnectNotEnabled" = "Note: Quick Connect not enabled";

/* Represents the Quick Connect message message for step 1 when adding an account to Swiftfin using Quick Connect from another device */
"quickConnectStep1" = "1. Open the Jellyfin app on your phone or web browser and sign in with your account";

/* Represents the Quick Connect message message for step 2 when adding an account to Swiftfin using Quick Connect from another device */
"quickConnectStep2" = "2. Open the user menu and go to the Quick Connect page";

/* Represents the Quick Connect message message for step 3 when adding an account to Swiftfin using Quick Connect from another device */
"quickConnectStep3" = "3. Enter the following code:";

/* Represents the Quick Connect message label when Quick Connect authorization for another device succeeds */
"quickConnectSuccessMessage" = "Authorizing Quick Connect successful. Please continue on your other device.";


/* MARK: TODO - Removed Unwanted Unused */


//"apply" = "Apply";
//"back" = "Back";
//"cinematicViews" = "Cinematic Views";
//"close" = "Close";
//"continueWatching" = "Continue Watching";
//"defaultScheme" = "Default Scheme";
//"displayOrder" = "Display order";
//"file" = "File";
//"information" = "Information";
//"loading" = "Loading";
//"login" = "Login";
//"loginToWithString" = "Login to %@";
//"moreLikeThis" = "More Like This";
//"networking" = "Networking";
//"noCodec" = "No Codec";
//"notAvailableSlash" = "N/A";
//"ok" = "Ok";
//"other" = "Other";
//"otherUser" = "Other User";
//"overview" = "Overview";
//"playNext" = "Play Next";
//"present" = "Present";
//"refresh" = "Refresh";
//"released" = "Released";
//"reload" = "Reload";
//"remove" = "Remove";
//"removeFromResume" = "Remove From Resume";
//"runtime" = "Runtime";
//"season" = "Season";
//"seasons" = "Seasons";
//"servers" = "Servers";
//"sortBy" = "Sort by";
//"tooManyRedirects" = "Too Many Redirects";
//"tryAgain" = "Try again";
//"unknown" = "Unknown";
